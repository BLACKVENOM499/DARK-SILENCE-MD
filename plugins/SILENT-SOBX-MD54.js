const axios = require("axios");
const {
  cmd
} = require("../command");
function getFlagEmoji(_0x4bbbbc) {
  if (!_0x4bbbbc) {
    return '';
  }
  return _0x4bbbbc.toUpperCase().split('').map(_0x5de7f4 => String.fromCodePoint(_0x5de7f4.charCodeAt(0) + 127397)).join('');
}
cmd({
  'pattern': "check",
  'react': 'üîç',
  'desc': "Checks the country calling code and returns the corresponding country name(s) with flag",
  'category': "utility",
  'filename': __filename
}, async (_0x4c3ca8, _0x5a24af, _0x4ae5e9, {
  from: _0x529a38,
  args: _0x5219c9,
  reply: _0x5879af
}) => {
  try {
    let _0x338935 = _0x5219c9[0];
    if (!_0x338935) {
      return _0x5879af("*üéê ·¥ò ü·¥á·¥Äs·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥Ä ·¥Ñ·¥è·¥ú…¥·¥õ Ä è ·¥Ñ·¥è·¥Ö·¥á. ·¥áx·¥Ä·¥ç·¥ò ü·¥á: `.·¥Ñ ú·¥á·¥Ñ·¥ã ùüøùü∏`*");
    }
    _0x338935 = _0x338935.replace(/\+/g, '');
    const {
      data: _0x415b8a
    } = await axios.get("https://restcountries.com/v2/all");
    const _0x3b90a5 = _0x415b8a.filter(_0x37742d => _0x37742d.callingCodes && _0x37742d.callingCodes.includes(_0x338935));
    if (_0x3b90a5.length > 0) {
      const _0x4de1f4 = _0x3b90a5.map(_0x166984 => getFlagEmoji(_0x166984.alpha2Code) + " " + _0x166984.name).join("\n");
      _0x5879af("üìÆ *COUNTRY CODE*: " + _0x338935 + "\nüåç *COUNTRIES*:\n" + _0x4de1f4 + "\n\n> ¬©POWERD BY SILENTLOVER432 ‚ô•Ô∏è");
    } else {
      _0x5879af("‚ùå No country found for the code " + _0x338935 + '.');
    }
  } catch (_0xa07067) {
    console.error(_0xa07067);
    _0x5879af("‚ùå An error occurred while checking the country code.");
  }
});
cmd({
  'pattern': "convertmoney",
  'react': 'üí∏',
  'alias': ["currency", "cvmoney"],
  'desc': "Convert money from one currency to another currency",
  'category': "utility",
  'use': ".currency amount fromCurrency toCurrency (e.g: .convert 100 USD EUR)",
  'filename': __filename
}, async (_0x587955, _0x150678, _0x3c7d7c, {
  from: _0x1f6290,
  reply: _0x1ca9d9,
  args: _0x6a48c0
}) => {
  try {
    if (_0x6a48c0.length !== 3) {
      return _0x1ca9d9("*‚≠ï …™…¥·¥†·¥Ä ü…™·¥Ö “ì·¥è Ä·¥ç·¥Ä·¥õ! ·¥ús·¥á: .·¥Ñ·¥ú Ä Ä·¥á…¥·¥Ñ è ·¥Ä·¥ç·¥è·¥ú…¥·¥õ “ì Ä·¥è·¥ç·¥Ñ·¥ú Ä Ä·¥á…¥·¥Ñ è ·¥õ·¥è·¥Ñ·¥ú Ä Ä·¥á…¥·¥Ñ è*\n*·¥áx·¥Ä·¥ç·¥ò ü·¥á: .·¥Ñ·¥ú Ä Ä·¥á…¥·¥Ñ è ùü∑ùü∂ùü∂ ·¥ús·¥Ö ·¥ò·¥ã Ä*");
    }
    const _0x4014aa = parseFloat(_0x6a48c0[0]);
    const _0x375918 = _0x6a48c0[1].toUpperCase();
    const _0x198194 = _0x6a48c0[2].toUpperCase();
    if (isNaN(_0x4014aa)) {
      return _0x1ca9d9("*‚ùå ·¥ò ü·¥á·¥Äs·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥Ä ·¥†·¥Ä ü…™·¥Ö ·¥Ä·¥ç·¥è·¥ú…¥·¥õ!*");
    }
    const _0x3f9438 = await axios.get("https://v6.exchangerate-api.com/v6/9c8b8532d40e5da04fac9772/latest/" + _0x375918);
    if (_0x3f9438.data.result === "error") {
      throw new Error(_0x3f9438.data["error-type"]);
    }
    const _0x32264c = _0x3f9438.data.conversion_rates;
    if (!_0x32264c[_0x198194]) {
      return _0x1ca9d9("*‚ùå …™…¥·¥†·¥Ä ü…™·¥Ö ·¥õ·¥Ä Ä…¢·¥á·¥õ ·¥Ñ·¥ú Ä Ä·¥á…¥·¥Ñ è ·¥Ñ·¥è·¥Ö·¥á! ·¥ò ü·¥á·¥Äs·¥á ·¥ús·¥á ·¥†·¥Ä ü…™·¥Ö ·¥Ñ·¥ú Ä Ä·¥á…¥·¥Ñ è ·¥Ñ·¥è·¥Ö·¥ás  ü…™·¥ã·¥á ·¥ús·¥Ö, ·¥á·¥ú Ä, …¢ ô·¥ò, ·¥á·¥õ·¥Ñ.*");
    }
    const _0x42ae3a = (_0x4014aa * _0x32264c[_0x198194]).toFixed(2);
    const _0x5b14ab = new Intl.NumberFormat().format(_0x4014aa);
    const _0x6afc66 = new Intl.NumberFormat().format(_0x42ae3a);
    const _0x279468 = "*üåç s…™ ü·¥á…¥·¥õ-s·¥è ôx-·¥ç·¥Ö ·¥Ñ·¥ú Ä Ä·¥á…¥·¥Ñ è ·¥Ñ·¥è…¥·¥†·¥á Äs…™·¥è…¥ üíµ*\n\n" + ("*üí≤ “ì Ä·¥è·¥ç:* " + _0x5b14ab + " " + _0x375918 + "\n") + ("*üè∑Ô∏è ·¥õ·¥è:* " + _0x6afc66 + " " + _0x198194 + "\n") + ("*üí∞  Ä·¥Ä·¥õ·¥á:* 1 " + _0x375918 + " = " + _0x32264c[_0x198194] + " " + _0x198194 + "\n\n") + ("*‚è∞  ü·¥Äs·¥õ ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á·¥Ö:* " + _0x3f9438.data.time_last_update_utc + "\n\n") + "*¬© ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è s…™ ü·¥á…¥·¥õ ü·¥è·¥†·¥á Ä‚Å¥¬≥¬≤*";
    _0x1ca9d9(_0x279468);
  } catch (_0x5ec8d3) {
    console.error("Currency conversion error:", _0x5ec8d3);
    if (_0x5ec8d3.message === "unsupported-code") {
      _0x1ca9d9("‚ùå Invalid currency code! Please use valid currency codes like USD, EUR, GBP, etc.");
    } else {
      if (_0x5ec8d3.message === "malformed-request") {
        _0x1ca9d9("‚ùå Invalid API request format. Please try again.");
      } else {
        if (_0x5ec8d3.message === "invalid-key") {
          _0x1ca9d9("‚ùå API key validation failed. Please contact the administrator.");
        } else {
          if (_0x5ec8d3.message === "inactive-account") {
            _0x1ca9d9("‚ùå API account is not active. Please contact the administrator.");
          } else if (_0x5ec8d3.message === "quota-reached") {
            _0x1ca9d9("‚ùå API quota has been reached. Please try again later.");
          } else {
            _0x1ca9d9("‚ùå Failed to convert currency. Please try again later.");
          }
        }
      }
    }
  }
});
